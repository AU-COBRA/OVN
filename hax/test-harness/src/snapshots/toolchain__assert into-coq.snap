---
source: test-harness/src/harness.rs
expression: snapshot
info:
  kind:
    Translate:
      backend: coq
  info:
    name: assert
    manifest: assert/Cargo.toml
    description: ~
  spec:
    optional: false
    broken: false
    issue_id: ~
    positive: true
    snapshot:
      stderr: false
      stdout: true
    include_flag: ~
    backend_options: ~
---
exit = 0

[stdout]
diagnostics = []

[stdout.files]
"Assert.v" = '''
(* File automatically generated by Hacspec *)
From Hacspec Require Import Hacspec_Lib MachineIntegers.
From Coq Require Import ZArith.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.

(*Not implemented yet? todo(item)*)

Definition asserts (_ : unit) : unit :=
  let _ := assert true : unit in
  let _ := assert ((@repr WORDSIZE32 1)=.?(@repr WORDSIZE32 1)) : unit in
  let _ := match ((@repr WORDSIZE32 2),(@repr WORDSIZE32 2)) with
    | '(left_val,right_val) =>
      assert (left_val=.?right_val)
    end : unit in
  let _ := match ((@repr WORDSIZE32 1),(@repr WORDSIZE32 2)) with
    | '(left_val,right_val) =>
      assert (not (left_val=.?right_val))
    end : unit in
  tt.
'''

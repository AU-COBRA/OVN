---
source: test-harness/src/harness.rs
expression: snapshot
info:
  kind:
    Translate:
      backend: fstar
  info:
    name: assert
    manifest: assert/Cargo.toml
    description: ~
  spec:
    optional: false
    broken: false
    issue_id: ~
    positive: true
    snapshot:
      stderr: false
      stdout: true
    include_flag: ~
    backend_options: ~
---
exit = 0

[stdout]
diagnostics = []

[stdout.files]
"Assert.fst" = '''
module Assert
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core
open FStar.Mul

let asserts (_: Prims.unit) : Prims.unit =
  let _:Prims.unit = Hax_lib.v_assert true in
  let _:Prims.unit = Hax_lib.v_assert (1l =. 1l <: bool) in
  let _:Prims.unit =
    match 2l, 2l <: (i32 & i32) with
    | left_val, right_val -> Hax_lib.v_assert (left_val =. right_val <: bool)
  in
  let _:Prims.unit =
    match 1l, 2l <: (i32 & i32) with
    | left_val, right_val -> Hax_lib.v_assert (~.(left_val =. right_val <: bool) <: bool)
  in
  ()
'''

---
source: test-harness/src/harness.rs
expression: snapshot
info:
  kind:
    Translate:
      backend: coq
  info:
    name: pattern-or
    manifest: pattern-or/Cargo.toml
    description: ~
  spec:
    optional: false
    broken: false
    issue_id: ~
    positive: true
    snapshot:
      stderr: true
      stdout: true
    include_flag: ~
    backend_options: ~
---
exit = 0
stderr = 'Finished `dev` profile [unoptimized + debuginfo] target(s) in XXs'

[stdout]
diagnostics = []

[stdout.files]
"Pattern_or.v" = '''
(* File automatically generated by Hacspec *)
From Hacspec Require Import Hacspec_Lib MachineIntegers.
From Coq Require Import ZArith.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.

Inductive t_E : Type :=
| E_A : t_E
| E_B : t_E.

Definition t_E_cast_to_repr (x : t_E_t) : uint_size :=
  match x with
  | E_A  =>
    (@repr WORDSIZE32 0)
  | E_B  =>
    (@repr WORDSIZE32 1)
  end.

(*Not implemented yet? todo(item)*)

Definition bar (x : t_E_t) : unit :=
  match x with
  | E_A  | E_B  =>
    tt
  end.

Definition deep (x : int32 × t_Option_t int32) : int32 :=
  match x with
  | '((@repr WORDSIZE32 1) | (@repr WORDSIZE32 2),Option_Some (@repr WORDSIZE32 3) | (@repr WORDSIZE32 4)) =>
    (@repr WORDSIZE32 0)
  | '(x,_) =>
    x
  end.

Definition deep_capture (x : t_Result_t (int32 × int32) (int32 × int32)) : int32 :=
  match x with
  | Result_Ok ((@repr WORDSIZE32 1) | (@repr WORDSIZE32 2),x) | Result_Err ((@repr WORDSIZE32 3) | (@repr WORDSIZE32 4),x) =>
    x
  | Result_Ok (x,_) | Result_Err (x,_) =>
    x
  end.

Definition equivalent (x : int32 × t_Option_t int32) : int32 :=
  match x with
  | '((@repr WORDSIZE32 1),Option_Some (@repr WORDSIZE32 3)) | '((@repr WORDSIZE32 1),Option_Some (@repr WORDSIZE32 4)) | '((@repr WORDSIZE32 2),Option_Some (@repr WORDSIZE32 3)) | '((@repr WORDSIZE32 2),Option_Some (@repr WORDSIZE32 4)) =>
    (@repr WORDSIZE32 0)
  | '(x,_) =>
    x
  end.

Definition nested (x : t_Option_t int32) : int32 :=
  match x with
  | Option_Some (@repr WORDSIZE32 1) | (@repr WORDSIZE32 2) =>
    (@repr WORDSIZE32 1)
  | Option_Some x =>
    x
  | Option_None  =>
    (@repr WORDSIZE32 0)
  end.
'''

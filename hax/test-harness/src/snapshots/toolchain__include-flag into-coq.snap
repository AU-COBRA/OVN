---
source: test-harness/src/harness.rs
expression: snapshot
info:
  kind:
    Translate:
      backend: coq
  info:
    name: include-flag
    manifest: cli/include-flag/Cargo.toml
    description: ~
  spec:
    optional: false
    broken: false
    issue_id: ~
    positive: true
    snapshot:
      stderr: false
      stdout: true
    include_flag: ~
---
exit = 0

[stdout]
diagnostics = []

[stdout.files]
"Include_flag.v" = '''
(* File automatically generated by Hacspec *)
From Hacspec Require Import Hacspec_Lib MachineIntegers.
From Coq Require Import ZArith.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.

Class t_Trait (Self : Type) := {
}.

(*Not implemented yet? todo(item)*)

Definition main_a_a (_ : unit) : unit :=
  tt.

Definition main_a_b (_ : unit) : unit :=
  tt.

Definition main_a_c (_ : unit) : unit :=
  tt.

Definition main_a (x : T) : unit :=
  let _ := main_a_a tt : unit in
  let _ := main_a_b tt : unit in
  let _ := main_a_c tt : unit in
  tt.

Definition main_b_a (_ : unit) : unit :=
  tt.

Definition main_b_b (_ : unit) : unit :=
  tt.

Definition main_b_c (_ : unit) : unit :=
  tt.

Definition main_b (_ : unit) : unit :=
  let _ := main_b_a tt : unit in
  let _ := main_b_b tt : unit in
  let _ := main_b_c tt : unit in
  tt.

Definition main_c_a (_ : unit) : unit :=
  tt.

Definition main_c_b (_ : unit) : unit :=
  tt.

Definition main_c_c (_ : unit) : unit :=
  tt.

Definition main_c (_ : unit) : unit :=
  let _ := main_c_a tt : unit in
  let _ := main_c_b tt : unit in
  let _ := main_c_c tt : unit in
  tt.

Record t_Foo : Type := {
}.

#[global] Instance t_Foo_t_t_Trait : t_Trait t_Foo_t := {
}.

Definition main (_ : unit) : unit :=
  let _ := main_a Foot_Foo_t : unit in
  let _ := main_b tt : unit in
  let _ := main_c tt : unit in
  tt.
'''

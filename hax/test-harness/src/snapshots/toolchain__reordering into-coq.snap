---
source: test-harness/src/harness.rs
expression: snapshot
info:
  kind:
    Translate:
      backend: coq
  info:
    name: reordering
    manifest: reordering/Cargo.toml
    description: ~
  spec:
    optional: false
    broken: false
    issue_id: ~
    positive: true
    snapshot:
      stderr: false
      stdout: true
    include_flag: ~
    backend_options: ~
---
exit = 0

[stdout]
diagnostics = []

[stdout.files]
"Reordering.v" = '''
(* File automatically generated by Hacspec *)
From Hacspec Require Import Hacspec_Lib MachineIntegers.
From Coq Require Import ZArith.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.

Inductive t_Foo : Type :=
| Foo_A : t_Foo
| Foo_B : t_Foo.

Definition t_Foo_cast_to_repr (x : t_Foo_t) : uint_size :=
  match x with
  | Foo_A  =>
    (@repr WORDSIZE32 0)
  | Foo_B  =>
    (@repr WORDSIZE32 1)
  end.

(*Not implemented yet? todo(item)*)

Definition f (_ : int32) : t_Foo_t :=
  Foo_At_Foo_t.

Definition no_dependency_1_ (_ : unit) : unit :=
  tt.

Definition no_dependency_2_ (_ : unit) : unit :=
  tt.

Record t_Bar : Type := {
  0 : t_Foo_t;
}.

Definition g (_ : unit) : t_Bar_t :=
  Bar (f (@repr WORDSIZE32 32)).
'''
